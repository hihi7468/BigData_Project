LAB 2번 류제범.
첫번째 파트
Q) 1. Add the following data to the counrties table:

A)INSERT INTO countries (name, capital, population) VALUES('FRANCE', Paris', 6715800);

Q) 2. Now add the following additional data to the countries table:

A)INSERT INTO countries (name, capital, population)VALUES ('USA', 'Washington D.C.', 325365189),
                    ('Germany', 'Berlin', 82349400), ('Japan', 'Tokyo', 126672000);

Q) 3. Add an entry to the celebrities table for the singer and songwriter Bruce Springsteen,
who was born on September 23rd 1949 and is still alive.

A) INSERT INTO celebrities (first_name, last_name, occupation, date_of_birth, deceased)
              VALUES ('Bruce', 'Springsteen', 'Singer, Songwriter', '1949-09-23', false);

Q) 4. Add an entry for the actress Scarlett Johansson, who was born on November 22nd 1984.
Use the Default value for the deceased column.

A) INSERT INTO celebrities (first_name, last_name, occupation, date_of_birth)
                 VALUES ('Scarlett', 'Johansson', 'Actress', '1984-11-22');

Q) 5. Add the following two entris to the celebrities table with a single INSERT statement.
For Frank Sinatra set true as the value for the deceased column. For Tom Cruise, don't
set and explicit value for the deceased column, but use the default value.

A) INSERT INTO celebrities (first_name, last_name, occupation, date_of_birth, deceased)
                VALUES ('Frank', 'Sinatra', 'Singer, Actor', '1915-12-12', true), ('Tom', 'Cruise', 'Actor', '1962-07-03', DEFAULT);   

Q) 6. Look at the schema of the celebrities table. what do you think will happen if we try to insert the following data?

A) 
INSERT INTO celebrities (first_name, last_name, occupation, date_of_birth)
                 VALUES ('Madonna', null, 'Singer, Actress', '1958-08-16');				 
INSERT INTO celebrities (first_name, occupation, date_of_birth)
                 VALUES ('Madonna', 'Singer, Actress', '1958-08-16');
실행시 에러가 일어난다. last_name의 컬럼에는 NOT NULL 제약사항이 걸려 있기 때문이다.
NOT NULL 제약사항을 풀거나, 값이 있는것을 넣어야한다.

Q) 7. Update the last_name column of the celebrities table so that the data in the previous question can be entered, and then add the data
to the table.

A)ALTER TABLE celebrities ALTER COLUMN last_name DROP NOT NULL;
INSERT INTO celebrities (first_name, occupation, date_of_birth, deceased)
                 VALUES ('Madonna', 'Singer, Actress', '1958-08-16', false), ('Prince', 'Singer, Songwriter, Musician, Actor', '1958-06-07', true);

Q) 8. Check the schema of the celebrities table. What would happen if we specify a NULL value for deceased
column, such as with the data below?

A) INSERT INTO celebrities (first_name, last_name, occupation, date_of_birth, deceased)
                 VALUES ('Elvis', 'Presley', 'Singer, Musician, Actor', '1935-08-01', NULL);

Q) 9.Check the schema of the animals table. What would happen if we tried to insert
the following data to the table?

A) ALTER TABLE animals DROP CONSTRAINT unique_binomial_name;

INSERT INTO animals (name, binomial_name, max_weight_kg, max_age_years, conservation_status)
             VALUES ('Dove', 'Columbidae Columbiformes', 2, 15, 'LC'),
                    ('Golden Eagle', 'Aquila Chrysaetos', 6.35, 24, 'LC'),
                    ('Peregrine Falcon', 'Falco Peregrinus', 1.5, 15, 'LC'),
                    ('Pigeon', 'Columbidae Columbiformes', 2, 15, 'LC'),
                    ('Kakapo', 'Strigops habroptila', 4, 60,'CR');

Q) 10. examine the schema for the orders table.
Based on the talbe schema and following information, write and execute an INSERT
statement to add the appropriate data to the orders table.
There are three customers James Bergman, Natasha O'Shea, Aaron Muller. James' email
address is james1998@email.com.
Natasha's email address is natasha@osheafamily.com
Aaron doesn't supply an email address.
James orders a LS Chicken Burger, Fries and a Cola.
Natasha has two orders an LS Cheeseburger with Fries but no drink, and an LS Double
Deluxe Burger with Onion Rings and a Chocolate Shake.
Aaron orders and LS Burger with no side or drink.
The item costs and loyalty points are listed below:

A) INSERT INTO orders (customer_name, customer_email, customer_loyalty_points, burger, side, drink, burger_cost, side_cost, drink_cost)
            VALUES ('James Bergman', 'james1998@email.com', 28, 'LS Chicken Burger', 'Fries', 'Cola', 4.50, 0.99, 1.50),
                   ('Natasha O''Shea', 'natasha@osheafamily.com', 18, 'LS Cheeseburger', 'Fries', NULL, 3.50, 0.99, DEFAULT),
                   ('Natasha O''Shea', 'natasha@osheafamily.com', 42, 'LS Double Deluxe Burger', 'Onion Rings', 'Chocolate Shake', 6.00, 1.50, 2.00),
                   ('Aaron Muller', NULL, 10, 'LS Burger', NULL, NULL, 3.00, DEFAULT, DEFAULT);

두번째 파트
Q) 1. Write a query to retrieve the population of the USA.

A) SELECT population FROM countries WHERE name = 'USA';

Q) 2. Write a query to return the population and the capital(with the columns in that order)
of all the countries in the table.

A) SELECT population, capital FROM countries;

Q) 3.Write a query to return the names and the capitals of all the countries in order of
population, from lowest th highest.

A) SELECT name FROM countries ORDER BY name;

Q) 4.Write a query to return the names and the capitals of all the countries in order of population, from lowest to highest.

A) SELECT name, capital FROM countries ORDER BY population;

Q) 5. Write a query to return the same information as the previous query, but ordered from highest to lowest.

A) SELECT name, capital FROM countries ORDER BY population DESC;

Q) 6. Write a query on the animals table, using ORDER BY, that will return the following output:

A) SELECT name, binomial_name, max_weight_kg, max_age_years FROM animals ORDER BY max_age_years, max_weight_kg, name DESC;

Q) 7. Write a query that returns the names of all the countries with a population greater than 70 million.

A) SELECT population FROM countries WHERE population > 7000000;

Q) 8. Write a query that returns the names of all the countries with a population greater than 70 million but
less than 200 million.

A) SELECT name FROM countries WHERE population BETWEEN 7000000 AND 20000000;

Q) 9. Write a query that will return the first name and last name of all entries in the celebrities table where the value of the deceased
column is not true.

A) SELECT first_name, last_name FROM celebrities WHERE deceased IS NULL;

Q) 10. Write a query that will return the first and last names of all the celebrities who sing.

A) SELECT first_name, last_name FROM celebrities WHERE occupation LIKE 'Singer%';

Q) 11. Write a query that will return the first and last names of all the celebrities who act.

A) SELECT first_name, last_name FROM celebrities WHERE  occupation LIKE '%Actor%' OR occupation LIKE '%Actress%';

Q) 12. Write a query that will return the first and last names of all the celebrities who both sing and act.

A) SELECT first_name, last_name FROM celebrities WHERE occupation Like '%Singer%' AND (occupation LIKE '%ACTOR%' OR occupation LIKE '%Actress%');

Q) 13. Write a query that lists all of the burgers that have been ordered, from cheapest to most expensive, 
where the cost of the burger is less than $5.00.

A) SELECT burger FROM orders WHERE burger_cost < 5 ORDER BY burger_cost ASC;

Q) 14. Write a query to return the customer name and email address and loyalty points from any order worth 20 or mor loyalty points.
List the results from the highest number of  points tho the lowest.

A) SELECT customer_name, customer_email, customer_loyalty_points FROM orders WHERE customer_loyalty_points >= 20 ORDER BY customer_loyalty_points DESC;

Q) 15. Write a query that returns all the burgers ordered by Natasha O'Shea.

A) SELECT burger FROM orders WHERE customer_name = 'Natasha O''Shea';

Q) 16. Write a query that returns the customer name from any order which does not include a drink item.

A) SELECT customer_name FROM orders WHERE drink IS NULL;

Q) 17. Write a query that returns the three meal items for any order which does not include fries.

A) SELECT burger, side, drink FROM orders WHERE side NOT IN('Fries') OR side IS NULL;

Q) 18. Write a query that returns the three meal items for any order that includes both
a side and a drink.

A) SELECT burger, side, drink FROM orders WHERE side IS NOT NULL AND drink IS NOT NULL;

세번째 파트

Q) 1. Write a query to retrieve the first row of data from the countries table.

A) SELECT * FROM countries LIMIT (1);

Q) 2. Write a query to retrieve the name of the country with the largest population

A) SELECT name FROM countries ORDER BY population DESC LIMIT (1);

Q) 3. Write a query to retrieve the name of the country with the second largest population.

A) SELECT name FROM countries ORDER BY population DESC offset 1 rows fetch first 1 row only;

Q) 4. Write a query to retrieve all of the unique values from the binomial_name column of the animals table.

A) SELECT DISTINCT binomial_name FROM animals;

Q) 5. Write a query to return the longest binomial name from the animals table.

A) SELECT DISTINCT binomial_name from animals
where length(binomial_name)=
(
  select max(length(binomial_name))
  from animals
);

Q) 6. Write a query to return the first name of any celebrity born in 1958.

A) SELECT first_name FROM celebrities WHERE date_of_birth BETWEEN '19580101' AND '19581231';

Q) 7. Write a query to return the highest maximum age from the animals table.

A)  SELECT MAX(max_age_years) FROM animals;

Q) 8. Write a query to return the average maximum weight from the animals table.

A) SELECT AVG(max_weight_kg)FROM animals;

Q) 9. Write a query to return the number of rows in the countries table.

A) SELECT COUNT(*) FROM countries;

Q) 10. Write a query to return the total population of all the countries in the countries table.

A)SELECT SUM(population) FROM countries;

Q) 11. Write a query to return each unique conservation status code alongside the number of animals that have that code.

A) SELECT conservation_status, COUNT(conservation_status) AS code_count FROM animals GROUP BY conservation_status;

Q) 12. Write a query that returns the average burger cost for all orders that include fries.

A)SELECT AVG(burger_cost + side_cost) FROM orders WHERE side = 'Fries' ;

Q) 13. Write a query that returns the cost of the cheapest side ordered.

A) SELECT MIN(side_cost) FROM orders WHERE side_cost > 0;

Q) 14. Write a query that returns the number of orders that include Fries and the number of orders that include Onion Rings.

A)SELECT COUNT(*) FROM orders GROUP BY side HAVING side = 'Fries'  OR side = 'Onion Rings';
